version: '3.8'

services:
  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    networks:
      - instagram_growth_network

  kafka:
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_HOST_NAME: localhost
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    depends_on:
      - zookeeper
    networks:
      - instagram_growth_network

  redis:
    image: redis:6.2-alpine
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - instagram_growth_network

  chat_interface:
    build:
      context: .
      dockerfile: Dockerfile.agent_template
    volumes:
      - ./src:/app/src
      - ./:/app
    command: python -m src.chat_interface_agent
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - REDIS_HOST=redis
      - GOOGLE_GEMINI_API_KEY=${GOOGLE_GEMINI_API_KEY}
      - LLM_PROVIDER=google
      - LLM_MODEL=gemini-pro
    depends_on:
      - kafka
      - redis
    networks:
      - instagram_growth_network

  growth_manager:
    build:
      context: .
      dockerfile: Dockerfile.agent_template
    volumes:
      - ./src:/app/src
      - ./:/app
    command: python -m src.growth_manager_agent
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - REDIS_HOST=redis
      - AGENT_ROLE=GROWTH_MANAGER
      - GOOGLE_GEMINI_API_KEY=${GOOGLE_GEMINI_API_KEY}
      - LLM_PROVIDER=google
      - LLM_MODEL=gemini-pro
    depends_on:
      - kafka
      - redis
    networks:
      - instagram_growth_network

  content_creator:
    build:
      context: .
      dockerfile: Dockerfile.agent_template
    volumes:
      - ./src:/app/src
      - ./:/app
    command: python -m src.content_creation_agent
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - REDIS_HOST=redis
      - AGENT_ROLE=CONTENT_CREATOR
      - GOOGLE_GEMINI_API_KEY=${GOOGLE_GEMINI_API_KEY}
      - LLM_PROVIDER=google
      - LLM_MODEL=gemini-pro
      - CONTENT_GENERATION_MODEL=gemini-pro
    depends_on:
      - kafka
      - redis
    networks:
      - instagram_growth_network

  scheduling_agent:
    build:
      context: .
      dockerfile: Dockerfile.agent_template
    volumes:
      - ./src:/app/src
      - ./:/app
    command: python -m src.scheduling_agent
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - REDIS_HOST=redis
      - AGENT_ROLE=SCHEDULING_SPECIALIST
      - GOOGLE_GEMINI_API_KEY=${GOOGLE_GEMINI_API_KEY}
      - LLM_PROVIDER=google
      - LLM_MODEL=gemini-pro
    depends_on:
      - kafka
      - redis
    networks:
      - instagram_growth_network

  execution_agent:
    build:
      context: .
      dockerfile: Dockerfile.agent_template
    volumes:
      - ./src:/app/src
      - ./:/app
    command: python -m src.execution_agent
    environment:
      - KAFKA_BOOTSTRAP_SERVERS=kafka:9092
      - REDIS_HOST=redis
      - AGENT_ROLE=EXECUTION_SPECIALIST
      - INSTAGRAM_API_KEY=${INSTAGRAM_API_KEY}
      - GOOGLE_GEMINI_API_KEY=${GOOGLE_GEMINI_API_KEY}
      - LLM_PROVIDER=google
      - LLM_MODEL=gemini-pro
    depends_on:
      - kafka
      - redis
    networks:
      - instagram_growth_network

networks:
  instagram_growth_network:
    driver: bridge

volumes:
  redis_data:
    driver: local
